rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize(maxSizeMB) {
      return request.resource.size < maxSizeMB * 1024 * 1024;
    }
    
    // Profile pictures
    match /profile_pictures/{userId}/{fileName} {
      // Anyone authenticated can read profile pictures
      allow read: if isAuthenticated();
      
      // Users can only upload/update/delete their own profile pictures
      allow write: if isAuthenticated() 
        && isOwner(userId)
        && isValidImage()
        && isValidSize(10); // 10MB max
    }
    
    // Message media (images shared in conversations)
    match /message_media/{conversationId}/{messageId}/{fileName} {
      // Anyone authenticated can read message media
      // TODO PR#7: Restrict to conversation members only
      allow read: if isAuthenticated();
      
      // Users can upload message media
      allow create: if isAuthenticated()
        && isValidImage()
        && isValidSize(10); // 10MB max
      
      // Users cannot update or delete message media
      // (messages are immutable once sent)
      allow update, delete: if false;
    }
    
    // Thumbnails generated by Cloud Functions
    match /message_media/{conversationId}/{messageId}_thumb.jpg {
      allow read: if isAuthenticated();
      allow write: if false; // Only Cloud Functions can write thumbnails
    }
    
    // Default: deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}





